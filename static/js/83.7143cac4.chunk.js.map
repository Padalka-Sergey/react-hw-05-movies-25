{"version":3,"file":"static/js/83.7143cac4.chunk.js","mappings":"8NACaA,EAAkB,SAAHC,GAAiC,IAA3BC,EAAKD,EAALC,MAAOC,EAAYF,EAAZE,aACvC,OACEC,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,GAAE,GAAAC,OAAKN,EAAMO,IAAMC,MAAOP,EAAaE,SAC1CH,EAAMS,kBAIf,E,QCoDA,EAtDe,WACb,IAAAC,GAAsCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHJ,IAILK,EAAAA,EAAAA,IAAeL,GACZM,MAAK,SAAAC,GACJb,EAAea,EAAIC,QACrB,IACCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GACpC,GAAG,CAACV,IAUJ,OACEa,EAAAA,EAAAA,MAAA,QAAA/B,SAAA,EACE+B,EAAAA,EAAAA,MAAA,QAAMC,UAAU,OAAOC,SAVN,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAEfpB,EAAgB,CAAEC,MAAOkB,EAAKE,SAASC,MAAMC,QAC7CJ,EAAKK,OACP,EAIkDzC,SAAA,EAC5CD,EAAAA,EAAAA,KAAA,SAAO2C,KAAK,OAAOC,KAAK,QAAQC,KAAM,MACtC7C,EAAAA,EAAAA,KAAA,UAAQ2C,KAAK,SAAQ1C,SAAC,eAEtBW,GAAyB,KAAVO,IACfnB,EAAAA,EAAAA,KAAA,KAAGiC,UAAU,aAAYhC,SAAC,2BAEH,KAAb,OAAXW,QAAW,IAAXA,OAAW,EAAXA,EAAakC,UACZ9C,EAAAA,EAAAA,KAAA,KAAGiC,UAAU,aAAYhC,SAAC,sCAE1BW,GAAeO,IAASnB,EAAAA,EAAAA,KAAC+C,EAAAA,EAAM,IAChCnC,IACCZ,EAAAA,EAAAA,KAAA,MAAIiC,UAAU,cAAahC,SACxBW,EAAYoC,KAAI,SAAAlD,GAAK,OACpBE,EAAAA,EAAAA,KAACJ,EAAe,CAEdE,MAAOA,EACPC,aAAc,CAAEkD,KAAM5B,IAFjBvB,EAAMO,GAGX,QAMd,C,sJC3DA,IAAM6C,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gQAIOC,EAAsB,WACjC,OAAOC,MACL,iEACAN,GACAzB,MAAK,SAAAC,GAAG,OAAIA,EAAI+B,MAAM,GAC1B,EAEaC,EAAe,SAAAC,GAC1B,OAAOH,MAAM,sCAADpD,OAC4BuD,EAAO,mBAC7CT,GACAzB,MAAK,SAAAC,GAAG,OAAIA,EAAI+B,MAAM,GAC1B,EAEaG,EAAe,SAAAD,GAC1B,OAAOH,MAAM,sCAADpD,OAC4BuD,EAAO,2BAC7CT,GACAzB,MAAK,SAAAC,GAAG,OAAIA,EAAI+B,MAAM,GAC1B,EAEaI,EAAkB,SAAAF,GAC7B,OAAOH,MAAM,sCAADpD,OAC4BuD,EAAO,kCAC7CT,GACAzB,MAAK,SAAAC,GAAG,OAAIA,EAAI+B,MAAM,GAC1B,EAEajC,EAAiB,SAAAZ,GAC5B,OAAO4C,MAAM,mDAADpD,OACyCQ,EAAW,8CAC9DsC,GACAzB,MAAK,SAAAC,GAAG,OAAIA,EAAI+B,MAAM,GAC1B,C","sources":["components/LinkSearchMovie/LinkSearchMovie.jsx","pages/Movies/Movies.jsx","services/fetch-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nexport const LinkSearchMovie = ({ movie, stateFromLoc }) => {\n  return (\n    <li>\n      <Link to={`${movie.id}`} state={stateFromLoc}>\n        {movie.original_title}\n      </Link>\n    </li>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { LinkSearchMovie } from 'components/LinkSearchMovie/LinkSearchMovie';\nimport { getSearhMovies } from 'services/fetch-api';\nimport './Movies.css';\n\nconst Movies = () => {\n  const [searchMovie, setSearchMovie] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    getSearhMovies(query)\n      .then(res => {\n        setSearchMovie(res.results);\n      })\n      .catch(err => console.error(err));\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    setSearchParams({ query: form.elements.input.value });\n    form.reset();\n  };\n\n  return (\n    <main>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"input\" size={30} />\n        <button type=\"submit\">Search</button>\n      </form>\n      {!searchMovie && query === '' && (\n        <p className=\"error-text\">Enter a valid request!</p>\n      )}\n      {searchMovie?.length === 0 && (\n        <p className=\"error-text\">Movies with this name not found!</p>\n      )}\n      {!searchMovie && query && <Loader />}\n      {searchMovie && (\n        <ul className=\"movies-list\">\n          {searchMovie.map(movie => (\n            <LinkSearchMovie\n              key={movie.id}\n              movie={movie}\n              stateFromLoc={{ from: location }}\n            />\n          ))}\n        </ul>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0NzlkMmVhMzEzMDU1ZDM2NzQ0ZTgxZGZiMTA3MDIwNSIsIm5iZiI6MTY2OTc0ODE3MC41MTgwMDAxLCJzdWIiOiI2Mzg2NTVjYWZiODM0NjAwODQ0MWRhY2YiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.48jU2cMOFeBS5uPo443RNVqS-YFq-LmlXD8cmjU4wWw',\n  },\n};\n\nexport const fetchFaforiteMovies = () => {\n  return fetch(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n    options\n  ).then(res => res.json());\n};\n\nexport const getMovieById = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n    options\n  ).then(res => res.json());\n};\n\nexport const getMovieCast = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n    options\n  ).then(res => res.json());\n};\n\nexport const getMovieReviews = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n    options\n  ).then(res => res.json());\n};\n\nexport const getSearhMovies = searchMovie => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${searchMovie}&include_adult=false&language=en-US&page=1`,\n    options\n  ).then(res => res.json());\n};\n"],"names":["LinkSearchMovie","_ref","movie","stateFromLoc","_jsx","children","Link","to","concat","id","state","original_title","_useState","useState","_useState2","_slicedToArray","searchMovie","setSearchMovie","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","location","useLocation","useEffect","getSearhMovies","then","res","results","catch","err","console","error","_jsxs","className","onSubmit","e","preventDefault","form","currentTarget","elements","input","value","reset","type","name","size","length","Loader","map","from","options","method","headers","accept","Authorization","fetchFaforiteMovies","fetch","json","getMovieById","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}